# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. 코드 체크아웃
    - name: Check out code
      uses: actions/checkout@v4

    # 2. JDK 17 설치
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. Gradle 캐시 설정
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # 4. Gradle Wrapper 실행 권한 추가
    - name: Set executable permission for gradlew
      run: chmod +x codeFarm/gradlew

    # 5. Gradle 빌드 및 테스트 실행
    - name: Build with Gradle
      run: |
        cd codeFarm
        ./gradlew build

    # 3. Docker 이미지 빌드
    - name: docker image build
      working-directory: codeFarm
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/codefarm-actions-test .

    # 4. DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 5. Docker Hub 이미지 푸tl
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/codefarm-actions-test

      
